<!DOCTYPE html>
<html>
<head>
<title>Calculator</title>
<!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>-->
<script src="/javascripts/jquery.js"></script>
<link rel="stylesheet" type="text/css" href="/stylesheets/style.css"></link>
</head>
<body>
<div>
    <input id="Expression" 
           readonly
           placeholder="Enter expression here"/>
    <span>=</span>    
    <span id="Result"></span>
</div>
<br>

<% let buttonBoxSeparator = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";%>
<table>
    <tbody>
        <tr>
            <td><button class="symbol">1</button></td>
            <td><button class="symbol">2</button></td>
            <td><button class="symbol">3</button></td>
            <td><%-buttonBoxSeparator%></td>
            <td><button class="operator symbol">+</button></td>
            <td><button class="operator symbol">-</button></td>
            <td><button class="operator symbol">*</button></td>
        </tr>

        <tr>
            <td><button class="symbol">4</button></td>
            <td><button class="symbol">5</button></td>
            <td><button class="symbol">6</button></td>
            <td><%-buttonBoxSeparator%></td>
            <td><button class="operator symbol">/</button></td>
            <td><button class="operator symbol">^</button></td>
            <td><button class="open paren symbol">(</button></td>
        </tr>

        <tr>
            <td><button class="symbol">7</button></td>
            <td><button class="symbol">8</button></td>
            <td><button class="symbol">9</button></td>
            <td><%-buttonBoxSeparator%></td>
            <td><button class="close paren symbol">)</button></td>
            <td colspan="2"><button id="Clear">Clear</button></td>
        </tr>

        <tr>
            <td><button class="sign symbol">+/-</button></td>
            <td><button class="symbol">0</button></td>
            <td><button class="decimal symbol">.</button></td>
            <td><%-buttonBoxSeparator%></td>
            <td colspan="3"><button id="Calculate">Calculate</button></td>
        </tr>
    </tbody>
</table>


<br>

</body>
<script>
$('#Calculate').click(updateResult);

function updateResult() {
    let expression = $("#Expression").val();
    let result = calculate(expression);
}

function calculate(expression) {
    let result = expression;
    if (parenCount == 0) {
        $.ajax({
            url: 'calculate',
            type: 'GET',
            dataType: 'json',
            data: {
                expression: expression
            },
            success: (data) => {
                console.log(data);
                result = data.result;
            }
        }).then(() => {
            if (isNaN(parseFloat(result))) {
                result = `<i>${result}</i>`;
            }
            $('#Result').html(result);
        });
    } else {
        $('#Result').html('<i>incorrect parentheses</i>');
    }
}

let parenCount = 0;

$('.symbol').click(invokeExpressionChangeEvent);

function invokeExpressionChangeEvent() {
    //TODO handle proper paranthesis: if input is ), check that last of () was a (
    let thisSymbol = $(this);
    let expression = $('#Expression');
    if (thisSymbol.hasClass('sign')) {
        changeSignOfLastTermIn(expression.val());        
    } else {
        insertInto(expression, thisSymbol);
    }
}

function insertInto(expression, symbol) {
    let space = '';
    let symbolText = symbol.text();
    if (symbol.hasClass('operator')) {
        let lastTerm = getLastTerm(expression.val());
        if (!isOperand(lastTerm) && !lastTerm.includes(')')) {
            return false;
        }
        space = ' ';
    } else if (symbol.hasClass('paren')) {
        symbolText = alterParen(symbol, expression.val());
        changeParenCount(symbol);
    } else if (symbol.hasClass('decimal')) {
        let lastChar = expression.val().substring(expression.val().length - 1, expression.val().length);
        let lastTerm = getLastTerm(expression.val());
        if (!isOperand(lastTerm) ||
            lastTerm.includes('.') ||
            lastChar.includes('.')) {
            return false;
        }
    }
    expression.val(expression.val() +
                    space +
                    symbolText +
                    space);
}

function alterParen(symbol, expression) {
    if (symbol.hasClass('open')) {
        let lastTerm = getLastTerm(expression);
        if (isOperand(lastTerm)) {
            return ' * ( ';
        } else if (isOperator(lastTerm)) {
            return ' ( ';
        }
        return ' ( ';
    } else {
        if (parenCount > 0) {
            return ' ) ';
        } else {
            return '';
        }
    }
}

function changeParenCount(symbol) {
    if (symbol.hasClass('open')) {
        parenCount++;
    } else if (parenCount > 0) {
        parenCount--;
    }
    console.log("Paren count: ", parenCount);
}

function changeSignOfLastTermIn(expression) {
    let expressionTerms = expression.split(' ');
    let lastTerm = parseFloat(expressionTerms[expressionTerms.length - 1]);
    if (isOperand(lastTerm)) {
        expressionTerms[expressionTerms.length - 1] = -1 * lastTerm;
        $('#Expression').val(expressionTerms.join(' '));
    }
}

$('#Clear').click(clearExpression);

function getLastTerm(expression, separator = ' ') {
    let expressionTerms = expression.split(separator);
    let lastTerm = expressionTerms[expressionTerms.length-1];
    if (''.includes(lastTerm) && expressionTerms.length > 1) {
        lastTerm = expressionTerms[expressionTerms.length - 2];
    }
    return lastTerm;
}

function isOperator(term) {
    let operatorString = '';
    let operators = $('.operator');
    operators.each((i, elem) => {
        operatorString += $(elem).text();
    });
    return operatorString.includes(term);
}

function isOperand(term) {
    return !isNaN(parseFloat(term));
}

function clearExpression() {
    $('#Expression').val("");
    $('#Result').html("");
    parenCount = 0;
}
</script>
</html>
